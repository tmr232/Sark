**********************************************************************
[004004F0]    push    rbp; This is a regular comment
<Instruction at 0x004004f0>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='rbp')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
**********************************************************************
[004004F1]    mov     rbp, rsp; This is a repeatable comment
<Instruction at 0x004004f1>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='rsp')>]
    regs = {'rbp', 'rsp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
rsp
    addr = 0
    base = rsp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rsp'}
    scale = None
    size = 8
    text = rsp
    type = General_Register
    value = 0
**********************************************************************
[004004F4]    sub     rsp, 10h
<Instruction at 0x004004f4>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = sub
    operands = [<Operand(n=0, text='rsp')>, <Operand(n=1, text='10h')>]
    regs = {'rsp'}

----------------------------------------------------------------------
rsp
    addr = 0
    base = rsp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rsp'}
    scale = None
    size = 8
    text = rsp
    type = General_Register
    value = 0
----------------------------------------------------------------------
10h
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 16
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = 10h
    type = Immediate_Value
    value = 16
**********************************************************************
[004004F8]    mov     [rbp+var_4], 0
<Instruction at 0x004004f8>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='[rbp+var_4]')>, <Operand(n=1, text='0')>]
    regs = {'rbp'}

----------------------------------------------------------------------
[rbp+var_4]
    addr = 18446744073709551612
    base = rbp
    displacement = 18446744073709551612
    dtype = 2
    flags = 8
    has_displacement = True
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 18446744073709551612
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = 1
    size = 4
    text = [rbp+var_4]
    type = Memory_Displacement
    value = 0
----------------------------------------------------------------------
0
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 4
    text = 0
    type = Immediate_Value
    value = 0
**********************************************************************
[004004FF]    mov     rdi, offset s; "Hello, World!"
<Instruction at 0x004004ff>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='rdi')>, <Operand(n=1, text='offset s')>]
    regs = {'rdi'}

----------------------------------------------------------------------
rdi
    addr = 0
    base = rdi
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rdi
    reg_id = 7
    regs = {'rdi'}
    scale = None
    size = 8
    text = rdi
    type = General_Register
    value = 0
----------------------------------------------------------------------
offset s
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 4195748
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = offset s
    type = Immediate_Value
    value = 4195748
**********************************************************************
[00400509]    call    _puts
<Instruction at 0x00400509>
    feature = 65794
    is_call = True
    is_indirect_jump = False
    is_ret = False
    mnem = call
    operands = [<Operand(n=0, text='_puts')>]
    regs = set()

----------------------------------------------------------------------
_puts
    addr = 4195312
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 4195312
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 4195312
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 4
    text = _puts
    type = Immediate_Near_Address
    value = 0
**********************************************************************
[0040050E]    xor     ecx, ecx
<Instruction at 0x0040050e>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = xor
    operands = [<Operand(n=0, text='ecx')>, <Operand(n=1, text='ecx')>]
    regs = {'ecx'}

----------------------------------------------------------------------
ecx
    addr = 0
    base = ecx
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = ecx
    reg_id = 1
    regs = {'ecx'}
    scale = None
    size = 4
    text = ecx
    type = General_Register
    value = 0
----------------------------------------------------------------------
ecx
    addr = 0
    base = ecx
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = ecx
    reg_id = 1
    regs = {'ecx'}
    scale = None
    size = 4
    text = ecx
    type = General_Register
    value = 0
**********************************************************************
[00400510]    mov     [rbp+var_8], eax
<Instruction at 0x00400510>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='[rbp+var_8]')>, <Operand(n=1, text='eax')>]
    regs = {'eax', 'rbp'}

----------------------------------------------------------------------
[rbp+var_8]
    addr = 18446744073709551608
    base = rbp
    displacement = 18446744073709551608
    dtype = 2
    flags = 8
    has_displacement = True
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 18446744073709551608
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = 1
    size = 4
    text = [rbp+var_8]
    type = Memory_Displacement
    value = 0
----------------------------------------------------------------------
eax
    addr = 0
    base = eax
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = eax
    reg_id = 0
    regs = {'eax'}
    scale = None
    size = 4
    text = eax
    type = General_Register
    value = 0
**********************************************************************
[00400513]    mov     eax, ecx
<Instruction at 0x00400513>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='eax')>, <Operand(n=1, text='ecx')>]
    regs = {'eax', 'ecx'}

----------------------------------------------------------------------
eax
    addr = 0
    base = eax
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = eax
    reg_id = 0
    regs = {'eax'}
    scale = None
    size = 4
    text = eax
    type = General_Register
    value = 0
----------------------------------------------------------------------
ecx
    addr = 0
    base = ecx
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = ecx
    reg_id = 1
    regs = {'ecx'}
    scale = None
    size = 4
    text = ecx
    type = General_Register
    value = 0
**********************************************************************
[00400515]    add     rsp, 10h
<Instruction at 0x00400515>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = add
    operands = [<Operand(n=0, text='rsp')>, <Operand(n=1, text='10h')>]
    regs = {'rsp'}

----------------------------------------------------------------------
rsp
    addr = 0
    base = rsp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rsp'}
    scale = None
    size = 8
    text = rsp
    type = General_Register
    value = 0
----------------------------------------------------------------------
10h
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 16
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = 10h
    type = Immediate_Value
    value = 16
**********************************************************************
[00400519]    pop     rbp
<Instruction at 0x00400519>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='rbp')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
**********************************************************************
[0040051A]    retn
<Instruction at 0x0040051a>
    feature = 65537
    is_call = False
    is_indirect_jump = False
    is_ret = True
    mnem = retn
    operands = []
    regs = set()

**********************************************************************
[00400520]    push    r15
<Instruction at 0x00400520>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='r15')>]
    regs = {'r15'}

----------------------------------------------------------------------
r15
    addr = 0
    base = r15
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = r15
    reg_id = 15
    regs = {'r15'}
    scale = None
    size = 8
    text = r15
    type = General_Register
    value = 0
**********************************************************************
[00400522]    push    r14
<Instruction at 0x00400522>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='r14')>]
    regs = {'r14'}

----------------------------------------------------------------------
r14
    addr = 0
    base = r14
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = r14
    reg_id = 14
    regs = {'r14'}
    scale = None
    size = 8
    text = r14
    type = General_Register
    value = 0
**********************************************************************
[00400524]    mov     r15, rdx
<Instruction at 0x00400524>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='r15')>, <Operand(n=1, text='rdx')>]
    regs = {'r15', 'rdx'}

----------------------------------------------------------------------
r15
    addr = 0
    base = r15
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r15
    reg_id = 15
    regs = {'r15'}
    scale = None
    size = 8
    text = r15
    type = General_Register
    value = 0
----------------------------------------------------------------------
rdx
    addr = 0
    base = rdx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = rdx
    reg_id = 2
    regs = {'rdx'}
    scale = None
    size = 8
    text = rdx
    type = General_Register
    value = 0
**********************************************************************
[00400527]    push    r13
<Instruction at 0x00400527>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='r13')>]
    regs = {'r13'}

----------------------------------------------------------------------
r13
    addr = 0
    base = r13
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = r13
    reg_id = 13
    regs = {'r13'}
    scale = None
    size = 8
    text = r13
    type = General_Register
    value = 0
**********************************************************************
[00400529]    push    r12
<Instruction at 0x00400529>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='r12')>]
    regs = {'r12'}

----------------------------------------------------------------------
r12
    addr = 0
    base = r12
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = r12
    reg_id = 12
    regs = {'r12'}
    scale = None
    size = 8
    text = r12
    type = General_Register
    value = 0
**********************************************************************
[0040052B]    lea     r12, __frame_dummy_init_array_entry
<Instruction at 0x0040052b>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = lea
    operands = [<Operand(n=0, text='r12')>, <Operand(n=1, text='__frame_dummy_init_array_entry')>]
    regs = {'r12'}

----------------------------------------------------------------------
r12
    addr = 0
    base = r12
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r12
    reg_id = 12
    regs = {'r12'}
    scale = None
    size = 8
    text = r12
    type = General_Register
    value = 0
----------------------------------------------------------------------
__frame_dummy_init_array_entry
    addr = 6295056
    base = rbp
    displacement = 6295056
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 6295056
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 5
    regs = set()
    scale = 1
    size = 8
    text = __frame_dummy_init_array_entry
    type = Direct_Memory_Reference
    value = 0
**********************************************************************
[00400532]    push    rbp
<Instruction at 0x00400532>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='rbp')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
**********************************************************************
[00400533]    lea     rbp, __do_global_dtors_aux_fini_array_entry
<Instruction at 0x00400533>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = lea
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='__do_global_dtors_aux_fini_array_entry')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
__do_global_dtors_aux_fini_array_entry
    addr = 6295064
    base = rbp
    displacement = 6295064
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 6295064
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 5
    regs = set()
    scale = 1
    size = 8
    text = __do_global_dtors_aux_fini_array_entry
    type = Direct_Memory_Reference
    value = 0
**********************************************************************
[0040053A]    push    rbx
<Instruction at 0x0040053a>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = push
    operands = [<Operand(n=0, text='rbx')>]
    regs = {'rbx'}

----------------------------------------------------------------------
rbx
    addr = 0
    base = rbx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = rbx
    reg_id = 3
    regs = {'rbx'}
    scale = None
    size = 8
    text = rbx
    type = General_Register
    value = 0
**********************************************************************
[0040053B]    mov     r13d, edi
<Instruction at 0x0040053b>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='r13d')>, <Operand(n=1, text='edi')>]
    regs = {'edi', 'r13d'}

----------------------------------------------------------------------
r13d
    addr = 0
    base = r13d
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r13d
    reg_id = 13
    regs = {'r13d'}
    scale = None
    size = 4
    text = r13d
    type = General_Register
    value = 0
----------------------------------------------------------------------
edi
    addr = 0
    base = edi
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = edi
    reg_id = 7
    regs = {'edi'}
    scale = None
    size = 4
    text = edi
    type = General_Register
    value = 0
**********************************************************************
[0040053E]    mov     r14, rsi
<Instruction at 0x0040053e>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='r14')>, <Operand(n=1, text='rsi')>]
    regs = {'r14', 'rsi'}

----------------------------------------------------------------------
r14
    addr = 0
    base = r14
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r14
    reg_id = 14
    regs = {'r14'}
    scale = None
    size = 8
    text = r14
    type = General_Register
    value = 0
----------------------------------------------------------------------
rsi
    addr = 0
    base = rsi
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = rsi
    reg_id = 6
    regs = {'rsi'}
    scale = None
    size = 8
    text = rsi
    type = General_Register
    value = 0
**********************************************************************
[00400541]    sub     rbp, r12
<Instruction at 0x00400541>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = sub
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='r12')>]
    regs = {'r12', 'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
r12
    addr = 0
    base = r12
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = r12
    reg_id = 12
    regs = {'r12'}
    scale = None
    size = 8
    text = r12
    type = General_Register
    value = 0
**********************************************************************
[00400544]    sub     rsp, 8
<Instruction at 0x00400544>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = sub
    operands = [<Operand(n=0, text='rsp')>, <Operand(n=1, text='8')>]
    regs = {'rsp'}

----------------------------------------------------------------------
rsp
    addr = 0
    base = rsp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rsp'}
    scale = None
    size = 8
    text = rsp
    type = General_Register
    value = 0
----------------------------------------------------------------------
8
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 8
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = 8
    type = Immediate_Value
    value = 8
**********************************************************************
[00400548]    sar     rbp, 3
<Instruction at 0x00400548>
    feature = 99076
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = sar
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='3')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
3
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 0
    flags = 8
    has_displacement = False
    imm = 3
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 1
    text = 3
    type = Immediate_Value
    value = 3
**********************************************************************
[0040054C]    call    _init_proc
<Instruction at 0x0040054c>
    feature = 65794
    is_call = True
    is_indirect_jump = False
    is_ret = False
    mnem = call
    operands = [<Operand(n=0, text='_init_proc')>]
    regs = set()

----------------------------------------------------------------------
_init_proc
    addr = 4195272
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 4195272
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 4195272
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 4
    text = _init_proc
    type = Immediate_Near_Address
    value = 0
**********************************************************************
[00400551]    test    rbp, rbp
<Instruction at 0x00400551>
    feature = 66304
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = test
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='rbp')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
**********************************************************************
[00400554]    jz      short loc_400576
<Instruction at 0x00400554>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = jz
    operands = [<Operand(n=0, text='loc_400576')>]
    regs = set()

----------------------------------------------------------------------
loc_400576
    addr = 4195702
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 4195702
    dtype = 0
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 4195702
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 1
    text = loc_400576
    type = Immediate_Near_Address
    value = 0
**********************************************************************
[00400556]    xor     ebx, ebx
<Instruction at 0x00400556>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = xor
    operands = [<Operand(n=0, text='ebx')>, <Operand(n=1, text='ebx')>]
    regs = {'ebx'}

----------------------------------------------------------------------
ebx
    addr = 0
    base = ebx
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = ebx
    reg_id = 3
    regs = {'ebx'}
    scale = None
    size = 4
    text = ebx
    type = General_Register
    value = 0
----------------------------------------------------------------------
ebx
    addr = 0
    base = ebx
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = ebx
    reg_id = 3
    regs = {'ebx'}
    scale = None
    size = 4
    text = ebx
    type = General_Register
    value = 0
**********************************************************************
[00400558]    nop     dword ptr [rax+rax+00000000h]
<Instruction at 0x00400558>
    feature = 65536
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = nop
    operands = [<Operand(n=0, text='dword ptr [rax+rax+00000000h]')>]
    regs = {'rax'}

----------------------------------------------------------------------
dword ptr [rax+rax+00000000h]
    addr = 0
    base = rax
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = True
    imm = 0
    index = rax
    is_read = False
    is_write = False
    n = 0
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rax'}
    scale = 1
    size = 4
    text = dword ptr [rax+rax+00000000h]
    type = Memory_Displacement
    value = 0
**********************************************************************
[00400560]    mov     rdx, r15
<Instruction at 0x00400560>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='rdx')>, <Operand(n=1, text='r15')>]
    regs = {'r15', 'rdx'}

----------------------------------------------------------------------
rdx
    addr = 0
    base = rdx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rdx
    reg_id = 2
    regs = {'rdx'}
    scale = None
    size = 8
    text = rdx
    type = General_Register
    value = 0
----------------------------------------------------------------------
r15
    addr = 0
    base = r15
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = r15
    reg_id = 15
    regs = {'r15'}
    scale = None
    size = 8
    text = r15
    type = General_Register
    value = 0
**********************************************************************
[00400563]    mov     rsi, r14
<Instruction at 0x00400563>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='rsi')>, <Operand(n=1, text='r14')>]
    regs = {'r14', 'rsi'}

----------------------------------------------------------------------
rsi
    addr = 0
    base = rsi
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rsi
    reg_id = 6
    regs = {'rsi'}
    scale = None
    size = 8
    text = rsi
    type = General_Register
    value = 0
----------------------------------------------------------------------
r14
    addr = 0
    base = r14
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = r14
    reg_id = 14
    regs = {'r14'}
    scale = None
    size = 8
    text = r14
    type = General_Register
    value = 0
**********************************************************************
[00400566]    mov     edi, r13d
<Instruction at 0x00400566>
    feature = 66052
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = mov
    operands = [<Operand(n=0, text='edi')>, <Operand(n=1, text='r13d')>]
    regs = {'edi', 'r13d'}

----------------------------------------------------------------------
edi
    addr = 0
    base = edi
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = edi
    reg_id = 7
    regs = {'edi'}
    scale = None
    size = 4
    text = edi
    type = General_Register
    value = 0
----------------------------------------------------------------------
r13d
    addr = 0
    base = r13d
    displacement = 0
    dtype = 2
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = r13d
    reg_id = 13
    regs = {'r13d'}
    scale = None
    size = 4
    text = r13d
    type = General_Register
    value = 0
**********************************************************************
[00400569]    call    ds:(__frame_dummy_init_array_entry - 600E10h)[r12+rbx*8]
<Instruction at 0x00400569>
    feature = 82178
    is_call = True
    is_indirect_jump = False
    is_ret = False
    mnem = call
    operands = [<Operand(n=0, text='ds:(__frame_dummy_init_array_entry - 600E10h)[r12+rbx*8]')>]
    regs = {'r12', 'rbx'}

----------------------------------------------------------------------
ds:(__frame_dummy_init_array_entry - 600E10h)[r12+rbx*8]
    addr = 0
    base = r12
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = True
    imm = 0
    index = rbx
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = r12
    reg_id = 12
    regs = {'r12', 'rbx'}
    scale = 8
    size = 8
    text = ds:(__frame_dummy_init_array_entry - 600E10h)[r12+rbx*8]
    type = Memory_Phrase
    value = 0
**********************************************************************
[0040056D]    add     rbx, 1
<Instruction at 0x0040056d>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = add
    operands = [<Operand(n=0, text='rbx')>, <Operand(n=1, text='1')>]
    regs = {'rbx'}

----------------------------------------------------------------------
rbx
    addr = 0
    base = rbx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rbx
    reg_id = 3
    regs = {'rbx'}
    scale = None
    size = 8
    text = rbx
    type = General_Register
    value = 0
----------------------------------------------------------------------
1
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 1
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = 1
    type = Immediate_Value
    value = 1
**********************************************************************
[00400571]    cmp     rbp, rbx
<Instruction at 0x00400571>
    feature = 66304
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = cmp
    operands = [<Operand(n=0, text='rbp')>, <Operand(n=1, text='rbx')>]
    regs = {'rbp', 'rbx'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
----------------------------------------------------------------------
rbx
    addr = 0
    base = rbx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = rbx
    reg_id = 3
    regs = {'rbx'}
    scale = None
    size = 8
    text = rbx
    type = General_Register
    value = 0
**********************************************************************
[00400574]    jnz     short loc_400560
<Instruction at 0x00400574>
    feature = 65792
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = jnz
    operands = [<Operand(n=0, text='loc_400560')>]
    regs = set()

----------------------------------------------------------------------
loc_400560
    addr = 4195680
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 4195680
    dtype = 0
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = False
    n = 0
    offset = 4195680
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 1
    text = loc_400560
    type = Immediate_Near_Address
    value = 0
**********************************************************************
[00400576]    add     rsp, 8
<Instruction at 0x00400576>
    feature = 66308
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = add
    operands = [<Operand(n=0, text='rsp')>, <Operand(n=1, text='8')>]
    regs = {'rsp'}

----------------------------------------------------------------------
rsp
    addr = 0
    base = rsp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = True
    is_write = True
    n = 0
    offset = 0
    reg = rsp
    reg_id = 4
    regs = {'rsp'}
    scale = None
    size = 8
    text = rsp
    type = General_Register
    value = 0
----------------------------------------------------------------------
8
    addr = 0
    base = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 8
    index = None
    is_read = True
    is_write = False
    n = 1
    offset = 0
    reg = # Exception: SarkOperandWithoutReg('Operand does not have a register.')
    reg_id = 0
    regs = set()
    scale = None
    size = 8
    text = 8
    type = Immediate_Value
    value = 8
**********************************************************************
[0040057A]    pop     rbx
<Instruction at 0x0040057a>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='rbx')>]
    regs = {'rbx'}

----------------------------------------------------------------------
rbx
    addr = 0
    base = rbx
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rbx
    reg_id = 3
    regs = {'rbx'}
    scale = None
    size = 8
    text = rbx
    type = General_Register
    value = 0
**********************************************************************
[0040057B]    pop     rbp
<Instruction at 0x0040057b>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='rbp')>]
    regs = {'rbp'}

----------------------------------------------------------------------
rbp
    addr = 0
    base = rbp
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = rbp
    reg_id = 5
    regs = {'rbp'}
    scale = None
    size = 8
    text = rbp
    type = General_Register
    value = 0
**********************************************************************
[0040057C]    pop     r12
<Instruction at 0x0040057c>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='r12')>]
    regs = {'r12'}

----------------------------------------------------------------------
r12
    addr = 0
    base = r12
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r12
    reg_id = 12
    regs = {'r12'}
    scale = None
    size = 8
    text = r12
    type = General_Register
    value = 0
**********************************************************************
[0040057E]    pop     r13
<Instruction at 0x0040057e>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='r13')>]
    regs = {'r13'}

----------------------------------------------------------------------
r13
    addr = 0
    base = r13
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r13
    reg_id = 13
    regs = {'r13'}
    scale = None
    size = 8
    text = r13
    type = General_Register
    value = 0
**********************************************************************
[00400580]    pop     r14
<Instruction at 0x00400580>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='r14')>]
    regs = {'r14'}

----------------------------------------------------------------------
r14
    addr = 0
    base = r14
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r14
    reg_id = 14
    regs = {'r14'}
    scale = None
    size = 8
    text = r14
    type = General_Register
    value = 0
**********************************************************************
[00400582]    pop     r15
<Instruction at 0x00400582>
    feature = 65540
    is_call = False
    is_indirect_jump = False
    is_ret = False
    mnem = pop
    operands = [<Operand(n=0, text='r15')>]
    regs = {'r15'}

----------------------------------------------------------------------
r15
    addr = 0
    base = r15
    displacement = 0
    dtype = 7
    flags = 8
    has_displacement = False
    imm = 0
    index = None
    is_read = False
    is_write = True
    n = 0
    offset = 0
    reg = r15
    reg_id = 15
    regs = {'r15'}
    scale = None
    size = 8
    text = r15
    type = General_Register
    value = 0
**********************************************************************
[00400584]    retn
<Instruction at 0x00400584>
    feature = 65537
    is_call = False
    is_indirect_jump = False
    is_ret = True
    mnem = retn
    operands = []
    regs = set()

